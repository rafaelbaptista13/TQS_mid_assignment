package tqs.ua.AirQuality.webpage;

// Generated by Selenium IDE
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
class ByCityTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @BeforeEach
  public void setUp() {
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @AfterEach
  public void tearDown() {
    driver.quit();
  }
  @Test
  void bycity() {
    driver.get("http://localhost:4200/");
    driver.manage().window().setSize(new Dimension(1920, 1031));
    driver.findElement(By.linkText("Search Air Quality by City")).click();
    driver.findElement(By.id("cities")).click();
    {
      WebElement dropdown = driver.findElement(By.id("cities"));
      dropdown.findElement(By.xpath("//option[. = 'Aveiro']")).click();
    }
    driver.findElement(By.cssSelector("option:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".btn")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".btn"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector("p:nth-child(1)")));
    }
    assertThat(driver.findElement(By.cssSelector("p:nth-child(1) > strong")).getText(), is("Aveiro"));
    assertThat(driver.findElement(By.xpath("//p[@id=\'no2\']/strong")).getText(), is("NO2:"));
    assertThat(driver.findElement(By.xpath("//p[@id=\'pm10\']/strong")).getText(), is("PM10:"));
    assertThat(driver.findElement(By.xpath("//p[@id=\'pm25\']/strong")).getText(), is("PM25:"));
    assertThat(driver.findElement(By.xpath("//p[@id=\'co\']/strong")).getText(), is("CO:"));
    assertThat(driver.findElement(By.xpath("//p[@id=\'so2\']/strong")).getText(), is("SO2:"));
    assertThat(driver.findElement(By.xpath("//p[@id=\'ozone\']/strong")).getText(), is("OZONE:"));
    assertThat(driver.findElement(By.xpath("//p[@id=\'aqi\']/strong")).getText(), is("AQI:"));
    assertThat(driver.findElement(By.xpath("//p[@id=\'pollutant\']/strong")).getText(), is("Pollutant:"));
    assertThat(driver.findElement(By.xpath("//p[@id=\'concentration\']/strong")).getText(), is("Concentration:"));
    assertThat(driver.findElement(By.xpath("//p[@id=\'category\']/strong")).getText(), is("Category:"));
  }

}
